plugins {
    id 'java'
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

group = 'org.waraccademy'
version = '1.0-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        name = 'spigotmc-repo'
        url = 'https://hub.spigotmc.org/nexus/content/repositories/snapshots/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }

    maven { url 'https://repo.codemc.org/repository/maven-public/'}
    maven { url 'https://jitpack.io' }
}

dependencies {
    compileOnly 'org.spigotmc:spigot-api:1.16.5-R0.1-SNAPSHOT'
    compileOnly 'com.arcaniax:HeadDatabase-API:1.3.1'
    compileOnly 'org.waraccademy:playtime:1.0-SNAPSHOT'
    compileOnly 'fr.minuskube.inv:smart-invs:1.2.7'
    compileOnly "com.github.MilkBowl:VaultAPI:1.7"

    compileOnly 'org.jetbrains:annotations:16.0.2'

    implementation 'de.tr7zw:item-nbt-api-plugin:2.10.0'
}

def targetJavaVersion = 8
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}

processResources {
    def props = [version: version]
    inputs.properties props
    filteringCharset 'UTF-8'
    filesMatching('plugin.yml') {
        expand props
    }
}


shadowJar {
    relocate 'de.tr7wz' , 'org.waraccademy.documenti.libs'
}
